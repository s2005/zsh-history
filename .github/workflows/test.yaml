name: "CI - Test Features"
on:
  push:
    branches:
      - main
      - fix_*
  pull_request:
  workflow_dispatch:

jobs:
  test-autogenerated:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features:
          - zsh-history
        baseImage:
          - debian:latest
          - ubuntu:latest
          - mcr.microsoft.com/devcontainers/base:ubuntu
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-scenarios:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features:
          - zsh-history
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated --skip-duplicated .
        
      - name: "Debug 'with-oh-my-zsh'"
        if: ${{ always() }}
        run: |
          echo "Debugging oh-my-zsh installation"
          docker ps -a
          TEST_CONTAINER=$(docker ps -a --filter "label=devcontainer.is_test_run=true" --format "{{.Names}}" | grep -i oh-my-zsh | head -n 1)
          if [ -n "$TEST_CONTAINER" ]; then
            echo "Found test container: $TEST_CONTAINER"
            echo "========== Container File Permissions =========="
            docker exec $TEST_CONTAINER ls -la /
            docker exec $TEST_CONTAINER ls -la /.zsh_history || echo "/.zsh_history not found or not accessible"
            docker exec $TEST_CONTAINER ls -la /commandhistory
            echo "========== Container User Info =========="
            docker exec $TEST_CONTAINER id
            docker exec $TEST_CONTAINER zsh --version || echo "zsh not installed or not accessible"
            docker exec $TEST_CONTAINER cat /etc/passwd | grep zsh
            echo "========== Container ZSHRC Content =========="
            docker exec $TEST_CONTAINER cat ~/.zshrc || echo "~/.zshrc not found or not accessible"
          else
            echo "No 'with-oh-my-zsh' test container found"
          fi

  test-global:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .
